apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: NAMESPACE_TO_BE_REPLACED
  name: MONGODB_DEPLOYMENT_NAME_TO_BE_REPLACED
spec:
  replicas: 1
  selector:
    matchLabels:
      app: MONGODB_DEPLOYMENT_NAME_TO_BE_REPLACED
  template:
    metadata:
      labels:
        app: MONGODB_DEPLOYMENT_NAME_TO_BE_REPLACED
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: MONGODB_CONTAINER_NAME_TO_BE_REPLACED
          image: MONGODB_IMAGE_NAME_TO_BE_REPLACED
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          args: ["--dbpath","/data/db"]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: password
          volumeMounts:
          - name: "mongo-data-dir"
            mountPath: "/data/db"
      volumes:
          - name: "mongo-data-dir"
            persistentVolumeClaim:
              claimName: "pvc"